using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using HostMe.Sdk.Api;
using HostMe.Sdk.Model;
using HostMe.Sdk.Client;
using System.Reflection;



namespace HostMe.Sdk.Test
{
    /// <summary>
    ///  Class for testing WaitingsStatReportItem
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class WaitingsStatReportItemTests
    {
        private WaitingsStatReportItem instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WaitingsStatReportItem();
        }
    
        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }   

        /// <summary>
        /// Test an instance of WaitingsStatReportItem
        /// </summary>
        [Test]
        public void WaitingsStatReportItemInstanceTest()
        {
            Assert.IsInstanceOf<WaitingsStatReportItem> (instance, "instance is a WaitingsStatReportItem");
        }

        
        /// <summary>
        /// Test the property 'Dimensions' 
        /// </summary>
        [Test]
        public void DimensionsTest()
        {
            // TODO: unit test for the property 'Dimensions' 
        }
        
        /// <summary>
        /// Test the property 'TotalPartyCount' 
        /// </summary>
        [Test]
        public void TotalPartyCountTest()
        {
            // TODO: unit test for the property 'TotalPartyCount' 
        }
        
        /// <summary>
        /// Test the property 'TotalHeadCount' 
        /// </summary>
        [Test]
        public void TotalHeadCountTest()
        {
            // TODO: unit test for the property 'TotalHeadCount' 
        }
        
        /// <summary>
        /// Test the property 'TotalSeatedCount' 
        /// </summary>
        [Test]
        public void TotalSeatedCountTest()
        {
            // TODO: unit test for the property 'TotalSeatedCount' 
        }
        
        /// <summary>
        /// Test the property 'TotalCanceledCount' 
        /// </summary>
        [Test]
        public void TotalCanceledCountTest()
        {
            // TODO: unit test for the property 'TotalCanceledCount' 
        }
        
        /// <summary>
        /// Test the property 'MinTimeToCall' 
        /// </summary>
        [Test]
        public void MinTimeToCallTest()
        {
            // TODO: unit test for the property 'MinTimeToCall' 
        }
        
        /// <summary>
        /// Test the property 'AvgTimeToCall' 
        /// </summary>
        [Test]
        public void AvgTimeToCallTest()
        {
            // TODO: unit test for the property 'AvgTimeToCall' 
        }
        
        /// <summary>
        /// Test the property 'MaxTimeToCall' 
        /// </summary>
        [Test]
        public void MaxTimeToCallTest()
        {
            // TODO: unit test for the property 'MaxTimeToCall' 
        }
        
        /// <summary>
        /// Test the property 'MinTimeToSeat' 
        /// </summary>
        [Test]
        public void MinTimeToSeatTest()
        {
            // TODO: unit test for the property 'MinTimeToSeat' 
        }
        
        /// <summary>
        /// Test the property 'AvgTimeToSeat' 
        /// </summary>
        [Test]
        public void AvgTimeToSeatTest()
        {
            // TODO: unit test for the property 'AvgTimeToSeat' 
        }
        
        /// <summary>
        /// Test the property 'MaxTimeToSeat' 
        /// </summary>
        [Test]
        public void MaxTimeToSeatTest()
        {
            // TODO: unit test for the property 'MaxTimeToSeat' 
        }
        
        /// <summary>
        /// Test the property 'MinTimeToCancel' 
        /// </summary>
        [Test]
        public void MinTimeToCancelTest()
        {
            // TODO: unit test for the property 'MinTimeToCancel' 
        }
        
        /// <summary>
        /// Test the property 'AvgTimeToCancel' 
        /// </summary>
        [Test]
        public void AvgTimeToCancelTest()
        {
            // TODO: unit test for the property 'AvgTimeToCancel' 
        }
        
        /// <summary>
        /// Test the property 'MaxTimeToCancel' 
        /// </summary>
        [Test]
        public void MaxTimeToCancelTest()
        {
            // TODO: unit test for the property 'MaxTimeToCancel' 
        }
        
        /// <summary>
        /// Test the property 'MaxLine' 
        /// </summary>
        [Test]
        public void MaxLineTest()
        {
            // TODO: unit test for the property 'MaxLine' 
        }
        
        /// <summary>
        /// Test the property 'AvgLine' 
        /// </summary>
        [Test]
        public void AvgLineTest()
        {
            // TODO: unit test for the property 'AvgLine' 
        }
        

    }

}


