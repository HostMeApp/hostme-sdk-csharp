/* 
 * Qa full api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: all
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using HostMe.Sdk.Api;
using HostMe.Sdk.Model;
using HostMe.Sdk.Client;
using System.Reflection;

namespace HostMe.Sdk.Test
{
    /// <summary>
    ///  Class for testing RestaurantInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class RestaurantInfoTests
    {
        // TODO uncomment below to declare an instance variable for RestaurantInfo
        //private RestaurantInfo instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of RestaurantInfo
            //instance = new RestaurantInfo();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of RestaurantInfo
        /// </summary>
        [Test]
        public void RestaurantInfoInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" RestaurantInfo
            //Assert.IsInstanceOfType<RestaurantInfo> (instance, "variable 'instance' is a RestaurantInfo");
        }

        /// <summary>
        /// Test the property 'HoursInterval'
        /// </summary>
        [Test]
        public void HoursIntervalTest()
        {
            // TODO unit test for the property 'HoursInterval'
        }
        /// <summary>
        /// Test the property 'AdditionalInfo'
        /// </summary>
        [Test]
        public void AdditionalInfoTest()
        {
            // TODO unit test for the property 'AdditionalInfo'
        }
        /// <summary>
        /// Test the property 'City'
        /// </summary>
        [Test]
        public void CityTest()
        {
            // TODO unit test for the property 'City'
        }
        /// <summary>
        /// Test the property 'MaxPartySize'
        /// </summary>
        [Test]
        public void MaxPartySizeTest()
        {
            // TODO unit test for the property 'MaxPartySize'
        }
        /// <summary>
        /// Test the property 'MinPartySize'
        /// </summary>
        [Test]
        public void MinPartySizeTest()
        {
            // TODO unit test for the property 'MinPartySize'
        }
        /// <summary>
        /// Test the property 'GuestReservationNote'
        /// </summary>
        [Test]
        public void GuestReservationNoteTest()
        {
            // TODO unit test for the property 'GuestReservationNote'
        }
        /// <summary>
        /// Test the property 'Currency'
        /// </summary>
        [Test]
        public void CurrencyTest()
        {
            // TODO unit test for the property 'Currency'
        }
        /// <summary>
        /// Test the property 'OpeningHours'
        /// </summary>
        [Test]
        public void OpeningHoursTest()
        {
            // TODO unit test for the property 'OpeningHours'
        }
        /// <summary>
        /// Test the property 'ReservationHours'
        /// </summary>
        [Test]
        public void ReservationHoursTest()
        {
            // TODO unit test for the property 'ReservationHours'
        }
        /// <summary>
        /// Test the property 'SpecialPeriods'
        /// </summary>
        [Test]
        public void SpecialPeriodsTest()
        {
            // TODO unit test for the property 'SpecialPeriods'
        }
        /// <summary>
        /// Test the property 'SeatingZones'
        /// </summary>
        [Test]
        public void SeatingZonesTest()
        {
            // TODO unit test for the property 'SeatingZones'
        }
        /// <summary>
        /// Test the property 'Areas'
        /// </summary>
        [Test]
        public void AreasTest()
        {
            // TODO unit test for the property 'Areas'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'NoShowFeeEnabled'
        /// </summary>
        [Test]
        public void NoShowFeeEnabledTest()
        {
            // TODO unit test for the property 'NoShowFeeEnabled'
        }
        /// <summary>
        /// Test the property 'ChargeIfCancelledBefore'
        /// </summary>
        [Test]
        public void ChargeIfCancelledBeforeTest()
        {
            // TODO unit test for the property 'ChargeIfCancelledBefore'
        }
        /// <summary>
        /// Test the property 'DepositRules'
        /// </summary>
        [Test]
        public void DepositRulesTest()
        {
            // TODO unit test for the property 'DepositRules'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Address'
        /// </summary>
        [Test]
        public void AddressTest()
        {
            // TODO unit test for the property 'Address'
        }
        /// <summary>
        /// Test the property 'ImageUrl'
        /// </summary>
        [Test]
        public void ImageUrlTest()
        {
            // TODO unit test for the property 'ImageUrl'
        }
        /// <summary>
        /// Test the property 'FacebookId'
        /// </summary>
        [Test]
        public void FacebookIdTest()
        {
            // TODO unit test for the property 'FacebookId'
        }
        /// <summary>
        /// Test the property 'TwitterAccount'
        /// </summary>
        [Test]
        public void TwitterAccountTest()
        {
            // TODO unit test for the property 'TwitterAccount'
        }
        /// <summary>
        /// Test the property 'WebsiteUrl'
        /// </summary>
        [Test]
        public void WebsiteUrlTest()
        {
            // TODO unit test for the property 'WebsiteUrl'
        }
        /// <summary>
        /// Test the property 'FoursquareId'
        /// </summary>
        [Test]
        public void FoursquareIdTest()
        {
            // TODO unit test for the property 'FoursquareId'
        }
        /// <summary>
        /// Test the property 'Phone'
        /// </summary>
        [Test]
        public void PhoneTest()
        {
            // TODO unit test for the property 'Phone'
        }
        /// <summary>
        /// Test the property 'TimeZone'
        /// </summary>
        [Test]
        public void TimeZoneTest()
        {
            // TODO unit test for the property 'TimeZone'
        }
        /// <summary>
        /// Test the property 'Lat'
        /// </summary>
        [Test]
        public void LatTest()
        {
            // TODO unit test for the property 'Lat'
        }
        /// <summary>
        /// Test the property 'Lon'
        /// </summary>
        [Test]
        public void LonTest()
        {
            // TODO unit test for the property 'Lon'
        }
        /// <summary>
        /// Test the property 'CreditCardChargeEnabled'
        /// </summary>
        [Test]
        public void CreditCardChargeEnabledTest()
        {
            // TODO unit test for the property 'CreditCardChargeEnabled'
        }
        /// <summary>
        /// Test the property 'ApprovalRequired'
        /// </summary>
        [Test]
        public void ApprovalRequiredTest()
        {
            // TODO unit test for the property 'ApprovalRequired'
        }
        /// <summary>
        /// Test the property 'HasHostmeSystem'
        /// </summary>
        [Test]
        public void HasHostmeSystemTest()
        {
            // TODO unit test for the property 'HasHostmeSystem'
        }
        /// <summary>
        /// Test the property 'Distance'
        /// </summary>
        [Test]
        public void DistanceTest()
        {
            // TODO unit test for the property 'Distance'
        }
        /// <summary>
        /// Test the property 'HasLoyaltyProgram'
        /// </summary>
        [Test]
        public void HasLoyaltyProgramTest()
        {
            // TODO unit test for the property 'HasLoyaltyProgram'
        }
        /// <summary>
        /// Test the property 'AcceptReservation'
        /// </summary>
        [Test]
        public void AcceptReservationTest()
        {
            // TODO unit test for the property 'AcceptReservation'
        }
        /// <summary>
        /// Test the property 'AllowManualHold'
        /// </summary>
        [Test]
        public void AllowManualHoldTest()
        {
            // TODO unit test for the property 'AllowManualHold'
        }

    }

}
