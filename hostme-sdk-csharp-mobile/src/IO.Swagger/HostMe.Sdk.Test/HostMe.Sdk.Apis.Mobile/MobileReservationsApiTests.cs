/* 
 * Qa mobile api
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: mb
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using HostMe.Sdk.Client;
using HostMe.Sdk.Api;
using HostMe.Sdk.Model;

namespace HostMe.Sdk.Test
{
    /// <summary>
    ///  Class for testing MobileReservationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MobileReservationsApiTests
    {
        private MobileReservationsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MobileReservationsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MobileReservationsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MobileReservationsApi
            //Assert.IsInstanceOfType(typeof(MobileReservationsApi), instance, "instance is a MobileReservationsApi");
        }

        
        /// <summary>
        /// Test GuestAddNewReservation
        /// </summary>
        [Test]
        public void GuestAddNewReservationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateMobileReservation item = null;
            //var response = instance.GuestAddNewReservation(item);
            //Assert.IsInstanceOf<ReservationGuest> (response, "response is ReservationGuest");
        }
        
        /// <summary>
        /// Test GuestCloseAsCanceled
        /// </summary>
        [Test]
        public void GuestCloseAsCanceledTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string reservationId = null;
            //CancelReservation cancelReservationContract = null;
            //instance.GuestCloseAsCanceled(reservationId, cancelReservationContract);
            
        }
        
        /// <summary>
        /// Test GuestGetInvitation
        /// </summary>
        [Test]
        public void GuestGetInvitationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string code = null;
            //var response = instance.GuestGetInvitation(code);
            //Assert.IsInstanceOf<ReservationInvitation> (response, "response is ReservationInvitation");
        }
        
        /// <summary>
        /// Test GuestGetReservationById
        /// </summary>
        [Test]
        public void GuestGetReservationByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string reservationId = null;
            //var response = instance.GuestGetReservationById(reservationId);
            //Assert.IsInstanceOf<ReservationGuest> (response, "response is ReservationGuest");
        }
        
        /// <summary>
        /// Test GuestInvitePartyMembers
        /// </summary>
        [Test]
        public void GuestInvitePartyMembersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string reservationId = null;
            //PartyMembersInvitation invitationContract = null;
            //var response = instance.GuestInvitePartyMembers(reservationId, invitationContract);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test GuestRedeemInvitation
        /// </summary>
        [Test]
        public void GuestRedeemInvitationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RedeemReservationInvitation redeemInvitationContract = null;
            //string code = null;
            //instance.GuestRedeemInvitation(redeemInvitationContract, code);
            
        }
        
        /// <summary>
        /// Test GuestUpdateReservation
        /// </summary>
        [Test]
        public void GuestUpdateReservationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string reservationId = null;
            //CreateMobileReservation value = null;
            //instance.GuestUpdateReservation(reservationId, value);
            
        }
        
    }

}
